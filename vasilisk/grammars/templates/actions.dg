regex :=
    !regexptype!.flags = "+regexp:flags+"
    !regexptype!.global = +common:bool+
    !regexptype!.ignoreCase = +common:bool+
    !regexptype!.multiline = +common:bool+
    !regexptype!.sticky = +common:bool+
    !regexptype!.unicode = +common:bool+
    !regexptype!.exec("+common:text+")
    !regexptype!.test("+common:text+")
    !regexptype!.toString()
    !regexptype!.lastIndex
    !regexptype!.compile()
    "+common:text+".split(!regexptype!)
    "+common:text+".split(!regexptype!, +common:int+)

array :=
    !arrtype![+common:int+]
    !arrtype![+common:decimal_number+]
    delete !arrtype![+common:byte_int+]
    !arrtype!.length
    !arrtype!.length = !valtype!
    !arrtype!.copyWithin(+common:int+)
    !arrtype!.copyWithin(+common:int+, +common:int+)
    !arrtype!.copyWithin(+common:int+, +common:int+, +common:int+)
    !arrtype!.fill(!valtype!)
    !arrtype!.fill(!valtype!, +common:int+)
    !arrtype!.fill(!valtype!, +common:int+, +common:int+)
    !arrtype!.pop()
    !arrtype!.push(!valtype!)
    !arrtype!.reverse()
    !arrtype!.shift()
    !arrtype!.splice(+common:int+, +common:int+, %repeat%(!valtype!, ", "))
    !arrtype!.unshift(%repeat%(!valtype!, ", "))
    !arrtype!.includes(!valtype!)
    !arrtype!.indexOf(!valtype!)
    !arrtype!.join()
    !arrtype!.join(!valtype!)
    !arrtype!.lastIndexOf(!valtype!)
    !arrtype!.entries()
    !arrtype!.slice()
    !arrtype!.slice(+common:int+)
    !arrtype!.slice(+common:int+, +common:int+)
    !arrtype!.toString()
    !arrtype!.toLocaleString()
    !arrtype!.keys()
    !arrtype!.values()
    !arrtype![+common:int+ % +array:any_arr+.length]
    !arrtype![+common:int+ % +array:any_arr+.length] = !valtype!
    !arrtype![+common:int+] = !valtype!
    !arrtype![+common:decimal_number+] = !valtype!

boolean :=
    !bool!.toString()
    !bool!.valueOf()

buffer :=
    ArrayBuffer.isView(!arraybuffertype!)
    ArrayBuffer.transfer(!arraybuffertype!)
    ArrayBuffer.transfer(!arraybuffertype!, +common:int+)
    !arraybuffertype!.slice(+common:positive_integer+)
    !arraybuffertype!.slice(+common:positive_integer+, +common:positive_integer+)
    !typedarraytype!.buffer
    !typedarraytype!.byteLength
    !typedarraytype!.byteOffset
    !typedarraytype!.length
    !typedarraytype!.copyWithin(+common:positive_integer+, +common:positive_integer+)
    !typedarraytype!.copyWithin(+common:positive_integer+, +common:positive_integer+, +common:positiv    e_integer+)
    !typedarraytype!.entries()
    !typedarraytype!.fill(!valtype!)
    !typedarraytype!.includes(!valtype!)
    !typedarraytype!.includes(!valtype!, +common:positive_integer+)
    !typedarraytype!.indexOf(!valtype!)
    !typedarraytype!.indexOf(!valtype!, +common:positive_integer+)
    !typedarraytype!.join()
    !typedarraytype!.join(!valtype!)
    !typedarraytype!.keys()
    !typedarraytype!.lastIndexOf(!valtype!)
    !typedarraytype!.lastIndexOf(!valtype!, +common:positive_integer+)
    !typedarraytype!.reverse()
    !typedarraytype!.set(!valtype!)
    !typedarraytype!.set(!valtype!, +common:positive_integer+)
    !typedarraytype!.slice()
    !typedarraytype!.slice(+common:integer+)
    !typedarraytype!.slice(+common:integer+, +common:integer+)
    !typedarraytype!.subarray()
    !typedarraytype!.subarray(+common:integer+, +common:integer+)
    !typedarraytype!.values()
    !typedarraytype!.toLocaleString()
    !typedarraytype!.toString()
    !typedarraytype![Symbol.iterator]()

dataview :=
    !dataviewtype!.buffer
    !dataviewtype!.buffer = +dataview:dataviewbuffer+
    !dataviewtype!.byteLength
    !dataviewtype!.byteLength = +common:int+
    !dataviewtype!.byteOffset
    !dataviewtype!.byteOffset = +common:int+
    !dataviewtype!.getInt8(+dataview:get_args+)
    !dataviewtype!.getUInt8(+dataview:get_args+)
    !dataviewtype!.getInt16(+dataview:get_args+)
    !dataviewtype!.getUInt16(+dataview:get_args+)
    !dataviewtype!.getInt32(+dataview:get_args+)
    !dataviewtype!.getUInt32(+dataview:get_args+)
    !dataviewtype!.getFloat32(+dataview:get_args+)
    !dataviewtype!.getFloat64(+dataview:get_args+)
    !dataviewtype!.setInt8(+dataview:set_args+)
    !dataviewtype!.setUInt8(+dataview:set_args+)
    !dataviewtype!.setInt16(+dataview:set_args+)
    !dataviewtype!.setUInt16(+dataview:set_args+)
    !dataviewtype!.setInt32(+dataview:set_args+)
    !dataviewtype!.setUInt32(+dataview:set_args+)
    !dataviewtype!.setFloat32(+dataview:set_args+)
    !dataviewtype!.setFloat64(+dataview:set_args+)

date :=
    Date.now()
   !datetype!.getDate()
   !datetype!.getDay()
   !datetype!.dateFullYear()
   !datetype!.getHours()
   !datetype!.getMilliseconds()
   !datetype!.getMinutes()
   !datetype!.getMonth()
   !datetype!.getSeconds()
   !datetype!.getTime()
   !datetype!.getTimezoneOffset()
   !datetype!.getUTCDate()
   !datetype!.getUTCDay()
   !datetype!.getUTCFullYear()
   !datetype!.getUTCHours()
   !datetype!.getUTCMilliseconds()
   !datetype!.getUTCMinutes()
   !datetype!.getUTCMonth()
   !datetype!.getUTCSeconds()
   !datetype!.getYear()
   !datetype!.setDate(+common:int+)
   !datetype!.setFullYear(+common:int+)
   !datetype!.setHours(+common:int+)
   !datetype!.setMilliseconds(+common:int+)
   !datetype!.setMinutes(+common:int+)
   !datetype!.setMonth(+common:int+)
   !datetype!.setSeconds(+common:int+)
   !datetype!.setTime(+common:int+)
   !datetype!.setUTCDate(+common:int+)
   !datetype!.setUTCFullYear(+common:int+)
   !datetype!.setUTCHours(+common:int+)
   !datetype!.setUTCMilliseconds(+common:int+)
   !datetype!.setUTCMinutes(+common:int+)
   !datetype!.setUTCMonth(+common:int+)
   !datetype!.setUTCSeconds(+common:int+)
   !datetype!.setYear(+common:int+)
   !datetype!.toDateSTring()
   !datetype!.toISOString()
   !datetype!.toJSON()
   !datetype!.toGMTString()
   !datetype!.toLocaleDateString()
   !datetype!.toLocaleString()
   !datetype!.toLocaleTimeString()
   !datetype!.toString()
   !datetype!.toTimeString()
   !datetype!.toUTCString()
   !datetype!.valueOf()

obj :=
    !obj![+common:decimal_number+] = !valtype!

map :=
    !maptype!.size
    !maptype!.clear()
    !maptype!.delete(!valtype!)
    !maptype!.entries()
    !maptype!.get(!valtype!)
    !maptype!.has(!valtype!)
    !maptype!.keys()
    !maptype!.set(!valtype!, !valtype!)
    !maptype!.values()
    !maptype![Symbol.iterator]()

number :=
   Number.isNaN(!valtype!)
   Number.isFinite(!valtype!)
   Number.isInteger(!valtype!)
   Number.isSafeInteger(!valtype!)
   Number.parseFloat(!valtype!)
   Number.parseInt(!valtype!)
   !numbertype!.toExponential()
   !numbertype!.toExponential(+common:byte_int+)
   !numbertype!.toFixed()
   !numbertype!.toFixed(+common:byte_int+)
   !numbertype!.toLocaleString()
   !numbertype!.toPrecision()
   !numbertype!.toPrecision(+common:byte_int+)
   !numbertype!.toString()
   !numbertype!.toString(+common:byte_int+)
   !numbertype!.toString(%range%(0-36))
   !numbertype!.valueOf()

reflect :=
   Reflect.apply(!valtype!, !valtype!, !arrtype!)
   Reflect.construct(!valtype!, !arrtype!)
   Reflect.construct(!valtype!, !arrtype!, !valtype!)
   Reflect.defineProperty(!valtype!, +reflect:property+, +reflect:attributes+)
   Reflect.deleteProperty(!valtype!, +reflect:property+)
   Reflect.get(!valtype!, +reflect:property+)
   Reflect.get(!valtype!, +reflect:property+, !valtype!)
   Reflect.getOwnPropertyDescriptor(!valtype!, +reflect:property+)
   Reflect.getPrototypeOf(!valtype!)
   Reflect.has(!valtype!, +reflect:property+)
   Reflect.isExtensible(!valtype!)
   Reflect.ownKeys(!valtype!)
   Reflect.preventExtensions(!valtype!)
   Reflect.set(!valtype!, +reflect:property+, !valtype!)
   Reflect.set(!valtype!, +reflect:property+, !valtype!, !valtype!)
   Reflect.setPrototypeOf(!valtype!, +reflect:prototype+)

set :=
   !settype!.size
   !settype!.add(!valtype!)
   !settype!.clear()
   !settype!.delete(!valtype!)
   !settype!.entries()
   !settype!.has(!valtype!)
   !settype!.keys()
   !settype!.values()
   !settype![Symbol.iterator]()

string :=
   String.fromCharCode(%repeat%(+common:short_int+, ", "))
   String.fromCodePoint(%repeat%(+common:int+, ", "))
   !stringtype!.charAt(+common:int+)
   !stringtype!.charAt(+common:byte_int+)
   !stringtype!.charCodeAt(+common:int+)
   !stringtype!.charCodeAt(+common:byte_int+)
   !stringtype!.codePointAt(+common:int+)
   !stringtype!.codePointAt(+common:byte_int+)
   !stringtype!.concat(+string:stringtype+)
   !stringtype!.includes(+string:stringtype+)
   !stringtype!.endsWith(+string:stringtype+)
   !stringtype!.indexOf(+string:stringtype+)
   !stringtype!.indexOf(+string:stringtype+, +common:int+)
   !stringtype!.lastIndexOf(+string:stringtype+)
   !stringtype!.lastIndexOf(+string:stringtype+, +common:int+)
   !stringtype!.match(+regexp:regexptype+)
   !stringtype!.normalize()
   !stringtype!.normalize(+string:normalize_form+)
   !stringtype!.padEnd(+common:int+)
   !stringtype!.padEnd(+common:int+, +string:stringtype+)
   !stringtype!.padStart(+common:int+)
   !stringtype!.padStart(+common:int+, +string:stringtype+)
   !stringtype!.repeat(+common:short_int+)
   !stringtype!.replace(+string:stringtype+, +string:stringtype+)
   !stringtype!.replace(+regexp:regexptype+, "")
   !stringtype!.replace(+regexp:regexptype+, +string:stringtype+)
   !stringtype!.search(+regexp:regexptype+)
   !stringtype!.slice(+common:int+)
   !stringtype!.slice(+common:int+, +common:int+)
   !stringtype!.split()
   !stringtype!.split(+string:stringtype+)
   !stringtype!.split(+string:stringtype+, +common:int+)
   !stringtype!.startsWith(+string:stringtype+)
   !stringtype!.startsWith(+string:stringtype+, +common:int+)
   !stringtype!.substr(+common:int+)
   !stringtype!.substr(+common:int+, +common:int+)
   !stringtype!.substring(+common:int+)
   !stringtype!.substring(+common:int+, +common:int+)
   !stringtype!.toLocaleLowerCase()
   !stringtype!.toLocaleUpperCase()
   !stringtype!.toLowerCase()
   !stringtype!.toString()
   !stringtype!.toUpperCase()
   !stringtype!.trim()
   !stringtype!.trimStart()                                               
   !stringtype!.trimLeft()
   !stringtype!.trimEnd()

symbol :=
   !symboltype!.toString()
   !symboltype!.valueOf()

weakmap :=
    !weakmaptype!.delete(!valtype!)
    !weakmaptype!.get(!valtype!)
    !weakmaptype!.has(!valtype!)
    !weakmaptype!.set(!valtype!, !valtype!)

weakset :=
    !weaksettype!.add(!valtype!)
    !weaksettype!.delete(!valtype!)
    !weaksettype!.has(!valtype!)
