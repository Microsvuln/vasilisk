%section% := value

getPrototypeOfBody :=
    throw 1;
    return target.prototype;
    +driver:statement+; return target.prototype;

setPrototypeOfBody :=
    throw 1;
    target.prototype = proto;
    %repeat%(+driver:statement+, ";"); return target.prototype = proto;

isExtensibleBody :=
    throw 1;
    return +common:bool+;
    %repeat%(+driver:statement+, ";"); return +common:bool+;

preventExtensionsBody :=
    throw 1;
    return +common:bool+;
    %repeat%(+driver:statement+, ";"); return +common:bool+;

getOwnPropertyDescriptorBody :=
    throw 1;
    return { configurable: +common:bool+, enumerable: +common:bool+, value: +value:valtype+ }
    %repeat%(+driver:statement+, ";"); return { configurable: +common:bool+, enumerable: +common:bool+, value: +value:valtype+ }

definePropertyBody :=
    throw 1;
    return +common:bool+
    %repeat%(+driver:statement+, ";"); return +common:bool+;

hasBody :=
    throw 1;
    return +common:bool+
    %repeat%(+driver:statement+, ";"); return +common:bool+;

getBody :=
    throw 1;
    return target[key];
    %repeat%(+driver:statement+, ";"); return target[key];
    if (key == +reflect:property+) { return +value:valtype+; } else { return target[key]; }

setBody :=
    throw 1;
    target[key] = value;
    %repeat%(+driver:statement+, ";"); target[key] = value;

deletePropertyBody :=
    throw 1;
    delete target[prop];
    %repeat%(+driver:statement+, ";"); delete target[prop];

ownKeysBody :=
    throw 1;
    return +array:arrtype+
    %repeat%(+driver:statement+, ";"); return +array:arrtype+;

applyBody :=
    throw 1;
    return +value:valtype+
    %repeat%(+driver:statement+, ";"); return +value:valtype+;

constructBody :=
    throw 1;
    return +value:valtype+
    %repeat%(+driver:statement+, ";"); return +value:valtype+;


proxytrap :=
    "getPrototypeOf": (target) => { +getPrototypeOfBody+ }

proxyhandler :=
    {%repeat%(+proxytrap+, ", ")}

proxytype :=
    new Proxy(!object:obj!, +proxyhandler+)
